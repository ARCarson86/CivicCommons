%h2 Conversations
%table.conversations.tablesorter(summary="List of Conversations") 
  %thead  
    %tr
      %th
      %th
      %th Conversation Title
      %th Created Date
      %th Staff Pick
      %th(colspan="2") Actions
  %tbody
    - @conversations.each do |conversation|
      %tr
        %td.handle &#11021;
        %td= conversation.position
        %td= link_to conversation.title, admin_conversation_path(conversation)
        %td= conversation.created_at.strftime("%m-%d-%Y")
        %td= toggle_staff_pick_link(conversation)
        %td= link_to "Edit", edit_admin_conversation_path(conversation)
        %td= link_to "Delete", admin_conversation_url(conversation), :method => :delete, :confirm => "Are you sure?"
:javascript
  // Return a helper with preserved width of cells
  var fixTableRowHelper = function(e, ui) {
    ui.children().each(function() {
      $(this).width($(this).width());
    });
    return ui;
  };
  var lastUpdatedRow = null;
  var is_ascending = false;

  function header_clicked(event){
    if($(this).index() == 4){
      $("table.conversations tbody").sortable("enable");
    } else {
      $("table.conversations tbody").sortable("disable");
    }
  }

  function update_sort(event, ui){
    lastUpdatedRow = $(ui.item);
    var current_index = $(ui.item).find('td:nth-child(5) span').html();
    var next_index = $(ui.item).next().find('td:nth-child(5) span').html();
    var prev_index = $(ui.item).prev().find('td:nth-child(5) span').html();
    var data = { current: current_index, next: next_index, prev: prev_index };

    if(next_index > prev_index){ is_ascending = true; }
    if(next_index < prev_index){ is_ascending = false; }

    $.post('/admin/conversations/update_order', data, function(data) {
      lastUpdatedRow.children().effect('highlight');
      $("table.conversations tbody td:nth-child(2)").each(function(index, element){
        if(is_ascending)
        {
          $(this).html(index);
        }else{
          var rows = $("table.conversations tbody tr").length;
          $(this).html(rows - index - 1);
        }
      });
      $("table.conversations tbody td:nth-child(5) span").each(function(index, element){
        if(is_ascending)
        {
          $(this).html(index);
        }else{
          var rows = $("table.conversations tbody tr").length;
          $(this).html(rows - index - 1);
        }
      });
      $("table.conversations").trigger("update");
    });
  }

  $(document).ready(function(){
    $("table.conversations tbody").sortable({
      axis: "y",
      containment: "table.conversations tbody",
      cursor: "move",
      disabled: true,
      handle: ".handle",
      helper: fixTableRowHelper,
      update: update_sort
    });
    $("table.conversations tbody .handle").disableSelection();
    $("table.conversations thead th").click(header_clicked);
  });
%br
