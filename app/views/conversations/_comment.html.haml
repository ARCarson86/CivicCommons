%li
  -# if postable is nil, that means this Comment doesn't have a matching Post record.
  -# Right now, in that case, we just skip the Comment. FIXME
  / A comment entry follows.
  %div
    - if postable
      .article.comment
        %a{:name=>"#post#{postable.id}"}
        .meta
          .comment-type{:class=>postable.official ? "" : "unofficial"}
            - "Official" if postable.official
          %img{:alt=>" [#{postable.person.name} image] ", :height => 25, :width => 25, :src=>"#{postable.person.avatar_url(:small)}"}
          %a.rating(href="#" title="Rate this comment")=format_rating(postable)
        %p
          -if postable.person
            %a{:href=>person_path(postable), :title=>"#{postable.person.name}'s Profile"}
              %strong= postable.person.name
          -else
            %strong= 'An unknown person'
          - tmp = format_time(postable.datetime)
          %span.action commented at #{link_to(tmp, comment_path(postable))}
        %p.content= postable.content
        %p
          - if person_signed_in?
            %a.text.button.conversation-action(id="action-link-#{postable.id}" href="#" title="Leave a comment") Leave a comment
          - if can_edit?(postable.person)
            %a(href="#" class="privileged" title="Delete this comment") Delete (doesn't work)
      %div{:clear => 'both'}
      .tab-strip(id="action-div-#{postable.id}")
      %ul
        - postable.posts.order('created_at DESC').each do |post|
          =render :partial => post.postable_type.downcase, :locals => { :postable => post.postable }
